// automatically generated by the FlatBuffers compiler, do not modify

import * as NS6089005415887012198 from "./SocketTypeDescription_generated";
import * as NS1680207995261792048 from "./NodeTypeDescription_generated";
/**
 * @constructor
 */
export namespace executionGraphGUI.serialization{
export class GraphTypeDescription {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {GraphTypeDescription}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):GraphTypeDescription {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {GraphTypeDescription=} obj
 * @returns {GraphTypeDescription}
 */
static getRootAsGraphTypeDescription(bb:flatbuffers.ByteBuffer, obj?:GraphTypeDescription):GraphTypeDescription {
  return (obj || new GraphTypeDescription).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {executionGraphGUI.serialization.NodeTypeDescription=} obj
 * @returns {executionGraphGUI.serialization.NodeTypeDescription}
 */
nodeTypeDescriptions(index: number, obj?:NS1680207995261792048.executionGraphGUI.serialization.NodeTypeDescription):NS1680207995261792048.executionGraphGUI.serialization.NodeTypeDescription|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new NS1680207995261792048.executionGraphGUI.serialization.NodeTypeDescription).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns {number}
 */
nodeTypeDescriptionsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {executionGraphGUI.serialization.SocketTypeDescription=} obj
 * @returns {executionGraphGUI.serialization.SocketTypeDescription}
 */
socketTypeDescriptions(index: number, obj?:NS6089005415887012198.executionGraphGUI.serialization.SocketTypeDescription):NS6089005415887012198.executionGraphGUI.serialization.SocketTypeDescription|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new NS6089005415887012198.executionGraphGUI.serialization.SocketTypeDescription).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns {number}
 */
socketTypeDescriptionsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startGraphTypeDescription(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 */
static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, idOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeTypeDescriptionsOffset
 */
static addNodeTypeDescriptions(builder:flatbuffers.Builder, nodeTypeDescriptionsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, nodeTypeDescriptionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
static createNodeTypeDescriptionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startNodeTypeDescriptionsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} socketTypeDescriptionsOffset
 */
static addSocketTypeDescriptions(builder:flatbuffers.Builder, socketTypeDescriptionsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, socketTypeDescriptionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
static createSocketTypeDescriptionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startSocketTypeDescriptionsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endGraphTypeDescription(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // name
  builder.requiredField(offset, 6); // id
  return offset;
};

}
}
