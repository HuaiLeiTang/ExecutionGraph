// automatically generated by the FlatBuffers compiler, do not modify

import * as NS6979572382460661179 from "@serialization/LogicNode_generated";
/**
 * @constructor
 */
export namespace executionGraphGUI.serialization{
export class NodeConstructionInfo {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NodeConstructionInfo}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):NodeConstructionInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NodeConstructionInfo=} obj
 * @returns {NodeConstructionInfo}
 */
static getRootAsNodeConstructionInfo(bb:flatbuffers.ByteBuffer, obj?:NodeConstructionInfo):NodeConstructionInfo {
  return (obj || new NodeConstructionInfo).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
type():string|null
type(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
type(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startNodeConstructionInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} typeOffset
 */
static addType(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, typeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endNodeConstructionInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // type
  builder.requiredField(offset, 6); // name
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace executionGraphGUI.serialization{
export class AddNodeRequest {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {AddNodeRequest}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):AddNodeRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {AddNodeRequest=} obj
 * @returns {AddNodeRequest}
 */
static getRootAsAddNodeRequest(bb:flatbuffers.ByteBuffer, obj?:AddNodeRequest):AddNodeRequest {
  return (obj || new AddNodeRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
graphId():string|null
graphId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
graphId(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {executionGraphGUI.serialization.NodeConstructionInfo=} obj
 * @returns {executionGraphGUI.serialization.NodeConstructionInfo|null}
 */
node(obj?:executionGraphGUI.serialization.NodeConstructionInfo):executionGraphGUI.serialization.NodeConstructionInfo|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new executionGraphGUI.serialization.NodeConstructionInfo).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startAddNodeRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} graphIdOffset
 */
static addGraphId(builder:flatbuffers.Builder, graphIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, graphIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeOffset
 */
static addNode(builder:flatbuffers.Builder, nodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nodeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endAddNodeRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // graphId
  builder.requiredField(offset, 6); // node
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace executionGraphGUI.serialization{
export class AddNodeResponse {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {AddNodeResponse}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):AddNodeResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {AddNodeResponse=} obj
 * @returns {AddNodeResponse}
 */
static getRootAsAddNodeResponse(bb:flatbuffers.ByteBuffer, obj?:AddNodeResponse):AddNodeResponse {
  return (obj || new AddNodeResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {executionGraph.serialization.LogicNode=} obj
 * @returns {executionGraph.serialization.LogicNode|null}
 */
node(obj?:NS6979572382460661179.executionGraph.serialization.LogicNode):NS6979572382460661179.executionGraph.serialization.LogicNode|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new NS6979572382460661179.executionGraph.serialization.LogicNode).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startAddNodeResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeOffset
 */
static addNode(builder:flatbuffers.Builder, nodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nodeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endAddNodeResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // node
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace executionGraphGUI.serialization{
export class RemoveNodeRequest {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {RemoveNodeRequest}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):RemoveNodeRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {RemoveNodeRequest=} obj
 * @returns {RemoveNodeRequest}
 */
static getRootAsRemoveNodeRequest(bb:flatbuffers.ByteBuffer, obj?:RemoveNodeRequest):RemoveNodeRequest {
  return (obj || new RemoveNodeRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
graphId():string|null
graphId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
graphId(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {flatbuffers.Long}
 */
id():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startRemoveNodeRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} graphIdOffset
 */
static addGraphId(builder:flatbuffers.Builder, graphIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, graphIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} id
 */
static addId(builder:flatbuffers.Builder, id:flatbuffers.Long) {
  builder.addFieldInt64(1, id, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endRemoveNodeRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // graphId
  return offset;
};

}
}
