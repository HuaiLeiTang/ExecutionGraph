// automatically generated by the FlatBuffers compiler, do not modify

import * as NS2944035823431282692 from "./SocketTypeDescription_generated";
import * as NS6979572382460661179 from "./LogicNode_generated";
/**
 * @constructor
 */
export namespace executionGraphGUI.serialization{
export class NodeDescription {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type {number}
   */
  bb_pos:number = 0;
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NodeDescription}
 */
__init(i:number, bb:flatbuffers.ByteBuffer):NodeDescription {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NodeDescription=} obj
 * @returns {NodeDescription}
 */
static getRootAsNodeDescription(bb:flatbuffers.ByteBuffer, obj?:NodeDescription):NodeDescription {
  return (obj || new NodeDescription).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {executionGraph.serialization.LogicNode=} obj
 * @returns {executionGraph.serialization.LogicNode|null}
 */
node(obj?:NS6979572382460661179.executionGraph.serialization.LogicNode):NS6979572382460661179.executionGraph.serialization.LogicNode|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new NS6979572382460661179.executionGraph.serialization.LogicNode).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param {number} index
 * @param {executionGraphGUI.serialization.SocketTypeDescription=} obj
 * @returns {executionGraphGUI.serialization.SocketTypeDescription}
 */
inputSockets(index: number, obj?:NS2944035823431282692.executionGraphGUI.serialization.SocketTypeDescription):NS2944035823431282692.executionGraphGUI.serialization.SocketTypeDescription|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new NS2944035823431282692.executionGraphGUI.serialization.SocketTypeDescription).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns {number}
 */
inputSocketsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {executionGraphGUI.serialization.SocketTypeDescription=} obj
 * @returns {executionGraphGUI.serialization.SocketTypeDescription}
 */
outputSockets(index: number, obj?:NS2944035823431282692.executionGraphGUI.serialization.SocketTypeDescription):NS2944035823431282692.executionGraphGUI.serialization.SocketTypeDescription|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new NS2944035823431282692.executionGraphGUI.serialization.SocketTypeDescription).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns {number}
 */
outputSocketsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
static startNodeDescription(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeOffset
 */
static addNode(builder:flatbuffers.Builder, nodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nodeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inputSocketsOffset
 */
static addInputSockets(builder:flatbuffers.Builder, inputSocketsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, inputSocketsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
static createInputSocketsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startInputSocketsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputSocketsOffset
 */
static addOutputSockets(builder:flatbuffers.Builder, outputSocketsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, outputSocketsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
static createOutputSocketsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
static startOutputSocketsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
static endNodeDescription(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // node
  return offset;
};

}
}
